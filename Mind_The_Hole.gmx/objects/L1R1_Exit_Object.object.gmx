<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Room_Exit_Texture</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Collisions_Object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.3;
verspeed = 0;

stage = 0;
stage1_cage_top = 0;
stage1_cage_sides = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Gravity();

if (place_meeting(x, y-1, Player_Object) &amp;&amp; stage == 0) 
{
    stage = 1;
        
    for (i = 64; i &lt;= 288; i+=32)
    {        
        make_blocks(i, -96, 0, 1, 0, 0.05, Dark_Blocks_Texture, 0);
    }
        
    for (i = -128; i &gt;= -576; i-=32)
    {
        make_blocks(176, i, 0, 1, 0, 0.05, Dark_Blocks_Texture, 0);
    }
    
    for (i = 64; i &lt;= 288; i+=32)
    {
        for (j = 832; j &lt;= 1056; j+=32)
        {   
            if (i == 64 || i == 288) make_blocks(i, j, 1, 1, 0, -0.05, Dark_Blocks_Texture, 1);
    
            if (j = 1056) make_blocks(i, j, 1, 1, 0, -0.05, Dark_Blocks_Texture, 1);
        }
    }
}
else if (stage == 1)
{   
    //for cage stage 0 means nothing is done 1 means top is finished and 2 and 3 are for each of the sides
    
    //If top is not finished
    if (stage1_cage_top == 0)
    {
        //Check if top is hitting grass and if so remove the grass
        with(Grass_Floor_Object)
        { 
            if (instance_position(x, y-2, Gravity_NoCollisions_Object)) instance_destroy();
        }
        
        //Check if top is at y = 448 and if so delete it and replace with objects that have collisions
        //and no gravity
        with(Gravity_NoCollisions_Object)
        {
            if (object == 0 &amp;&amp; x == 64 &amp;&amp; y &gt;= 448)
            {            
                L1R1_Exit_Object.stage1_cage_top++;
                with(Gravity_NoCollisions_Object)
                {
                    if (object == 0)
                    {
                        make_blocks(x, y-5, 1, 0, waitforcontact, grav, sprite_index, object);
                        instance_destroy();
                    }
                }
            }
        }
    }
    
    //If sides are not finished
    if (stage1_cage_sides == 0)
    {        
        //Check if sides are hitting the ground and if so make the ground move with the sides
        with(Floating_Blocks_Object)
        {
            if (x == 64 &amp;&amp; y = 704)
            {
                if (instance_position(x, y+32, Gravity_Collisions_Object))
                {
                    L1R1_Exit_Object.stage1_cage_sides++;
                    use_gravity = 1;
                    grav = -0.05;
                    with(instance_place(x, y-2, Floating_Blocks_Object))
                    {
                        use_gravity = 1;
                        grav = -0.05;
                    }
                    with(instance_place(x+224, y, Floating_Blocks_Object))
                    {
                        use_gravity = 1;
                        grav = -0.05;
                    }
                    with(instance_place(x+224, y-2, Floating_Blocks_Object))
                    {
                        use_gravity = 1;
                        grav = -0.05;
                    }
                }
            }
        }
    }   
    
    if (stage1_cage_top &amp;&amp; stage1_cage_sides)
    {
        stage = 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
